# Generated by Django 5.0 on 2024-02-10 16:22

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Exchange',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now_add=True)),
                ('origin', models.CharField(max_length=255)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FinancialInstrument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now_add=True)),
                ('symbol', models.CharField(max_length=200)),
                ('type', models.IntegerField(choices=[(0, 'Cripto'), (1, 'Cedear'), (2, 'Stock'), (3, 'Bono'), (4, 'Caucion'), (5, 'Fondo comun de inversion')], default=2)),
                ('market', models.IntegerField(choices=[(0, 'Cripto'), (1, 'Argy'), (2, 'Nasdaq')], default=1)),
                ('currency', models.IntegerField(choices=[(0, 'Pesos'), (1, 'USD')], default=0)),
                ('price_source', models.IntegerField(choices=[(0, 'Yahoo'), (1, 'Binance'), (2, 'Balanz'), (3, 'Coinbase')], default=2)),
                ('status', models.IntegerField(choices=[(0, 'Open'), (1, 'Close'), (2, 'Ready'), (3, 'Pending')], default=0)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Indicator',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now_add=True)),
                ('status', models.IntegerField(choices=[(0, 'Open'), (1, 'Close'), (2, 'Ready'), (3, 'Pending')], default=0)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Portfolio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now_add=True)),
                ('type', models.IntegerField(choices=[(0, 'Weekly'), (1, 'Monthly'), (2, 'Long term')], default=1)),
                ('status', models.IntegerField(choices=[(0, 'Open'), (1, 'Close'), (2, 'Ready'), (3, 'Pending')], default=0)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ExchangeFees',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now_add=True)),
                ('instrument', models.IntegerField(choices=[(0, 'Cripto'), (1, 'Cedear'), (2, 'Stock'), (3, 'Bono'), (4, 'Caucion'), (5, 'Fondo comun de inversion')], default=0)),
                ('fees', models.DecimalField(decimal_places=6, max_digits=10)),
                ('exchange', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='manager.exchange')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FinancialInstrumentApiData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now_add=True)),
                ('actual_price', models.DecimalField(decimal_places=5, max_digits=10)),
                ('actual_purchase_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('actual_sell_price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('volume', models.IntegerField(blank=True)),
                ('max', models.DecimalField(blank=True, decimal_places=2, max_digits=10)),
                ('min', models.DecimalField(blank=True, decimal_places=2, max_digits=10)),
                ('variation', models.CharField(default=0, max_length=200)),
                ('time', models.CharField(max_length=200)),
                ('financial_instrument', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='manager.financialinstrument')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FinancialInstrumentIndicator',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now_add=True)),
                ('value', models.DateTimeField()),
                ('instrument', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='manager.financialinstrument')),
                ('indicator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='manager.indicator')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='financialinstrument',
            name='indicators',
            field=models.ManyToManyField(blank=True, to='manager.indicator'),
        ),
        migrations.CreateModel(
            name='PortfolioFinancialInstrument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now_add=True)),
                ('status', models.IntegerField(choices=[(0, 'Open'), (1, 'Close'), (2, 'Ready'), (3, 'Pending')], default=0)),
                ('buy_quantity', models.DecimalField(decimal_places=2, max_digits=10)),
                ('buy_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10)),
                ('buy_date', models.DateField(blank=True)),
                ('sell_quantity', models.IntegerField(blank=True, default=0)),
                ('sell_price', models.DecimalField(blank=True, decimal_places=2, max_digits=10)),
                ('sell_date', models.DateField(blank=True)),
                ('portfolio', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='manager.portfolio')),
                ('ticker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='manager.financialinstrument')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='portfolio',
            name='tickers',
            field=models.ManyToManyField(blank=True, through='manager.PortfolioFinancialInstrument', to='manager.financialinstrument'),
        ),
        migrations.CreateModel(
            name='Trader',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('updated_on', models.DateTimeField(auto_now_add=True)),
                ('portfolios', models.ManyToManyField(blank=True, to='manager.portfolio')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
